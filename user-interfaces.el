;; -*- lexical-binding: t; no-byte-compile: t; coding: utf-8 -*-


(defmacro gcr--ui-date-entry (fun str)
  `(widget-create
    'push-button
    :notify
    (lambda (&rest ignore)
      (with-current-buffer origin
        (insert
         (gcr--kill (,fun))))
      (kill-this-buffer))
    ,str))

(defun gcr-ui-date ()
  (interactive)
  (let ((origin (buffer-name)))
    (switch-to-buffer "*gcr Dates*")
    (let ((inhibit-read-only t))
      (erase-buffer))
    (remove-overlays)
    (widget-insert "╔════════════════════╗\n")
    (widget-insert "║ Date Insert & Kill ║\n")
    (widget-insert "╚════════════════════╝")
    (widget-insert "\n\n")
    (widget-insert "Date: ")
    (gcr--ui-date-entry gcr-timestamp-datestamp "ISO")
    (widget-insert ", ")
    (gcr--ui-date-entry gcr-timestamp-datestamp-us "US")
    (widget-insert ", ")
    (gcr--ui-date-entry gcr-timestamp-datestamp-us-full-year "US Full Year")
    (widget-insert ", ")
    (gcr--ui-date-entry gcr-timestamp-datestamp-us-full-year-and-dashes "With Dashes")
    (widget-insert ", ")
    (gcr--ui-date-entry gcr-timestamp-datestamp-us-words "In Words")
    (widget-insert ".\n\n")
    (widget-insert "Date/Time: ")
    (gcr--ui-date-entry gcr-timestamp-8601 "Colons")
    (widget-insert ", ")
    (gcr--ui-date-entry gcr-timestamp-8601-no-colons "No Colons")
    (widget-insert ", ")
    (gcr--ui-date-entry gcr-log-entry "Log Entry")
    (widget-insert ", ")
    (gcr--ui-date-entry gcr-timestamp-jekyll "Jekyll")
    (widget-insert ".\n\n")
    (widget-insert "Time: ")
    (gcr--ui-date-entry gcr-timestamp-hour-seconds "24h Clock Hours:Seconds")
    (widget-insert ".\n\n")
    (widget-insert "Org-Mode: ")
    (gcr--ui-date-entry gcr-timestamp-org-datestamp "Today")
    (widget-insert "\n\nHit (q) to quit.")
    (let ((map (make-sparse-keymap)))
      (set-keymap-parent map widget-keymap)
      (define-key map "q" 'kill-this-buffer)
      (use-local-map map))
    (widget-setup)))
