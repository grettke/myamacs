;; -*- lexical-binding: t; no-byte-compile: t; coding: utf-8 -*-

(defun gcr-ui-date ()
  (interactive)
  (switch-to-buffer "*gcr Dates*")
  (let ((inhibit-read-only t))
    (erase-buffer))
  (remove-overlays)
  (widget-insert "╔════════════════════╗\n")
  (widget-insert "║ Insert A Date Type ║\n")
  (widget-insert "╚════════════════════╝")
  (widget-insert "\n\n")
  (widget-insert "Date: _I_SO, _U_S, US With _Y_ear and _D_ashes, US In _W_ords, _J_ekyll\n\n")
  (widget-insert "Date/Time: _N_o Colons or _w_ith, _L_og Entry (compact with note)\n\n")
  (widget-insert "Time: _H_our:Seconds\n\n")
  (widget-insert "Org-Mode: _T_oday, _R_ight Now, or _c_hoose\n\n")
  (widget-insert "_q_uit")
  (let ((map (make-sparse-keymap)))
    (set-keymap-parent map widget-keymap)
    (define-key map "I" 'gcr-timestamp-datestamp)
    (define-key map "Y" 'gcr-timestamp-datestamp-us-full-year)
    (define-key map "U" 'gcr-timestamp-datestamp-us)
    (define-key map "D" 'gcr-timestamp-datestamp-us-full-year-and-dashes)
    (define-key map "W" 'gcr-timestamp-datestamp-us-words )
    (define-key map "J" 'gcr-timestamp-jekyll)
    (define-key map "N" 'gcr-timestamp-insert-8601-no-colons)
    (define-key map "w" 'gcr-timestamp-insert-8601)
    (define-key map "L" 'gcr-log-entry)
    (define-key map "H" 'gcr-timestamp-hour-seconds)
    (define-key map "T" 'gcr-timestamp-org-datestamp)
    (define-key map "R" 'gcr-timestamp-make-org-seconds)
    (define-key map "c" 'org-time-stamp)
    (define-key map "q" 'kill-this-buffer)
    (use-local-map map))
  (widget-setup)
  (goto-char (point-min)))

